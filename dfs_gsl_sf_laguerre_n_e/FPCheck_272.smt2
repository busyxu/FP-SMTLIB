(declare-fun a_ack!861 () (_ BitVec 32))
(declare-fun c_ack!860 () (_ BitVec 64))
(declare-fun b_ack!859 () (_ BitVec 64))
(declare-fun FPCHECK_FSUB_OVERFLOW ((_ FloatingPoint 11 53) (_ BitVec 64)) Bool)
(assert (not (bvslt a_ack!861 #x00000000)))
(assert (not (= #x00000000 a_ack!861)))
(assert (not (= #x00000001 a_ack!861)))
(assert (not (fp.eq ((_ to_fp 11 53) c_ack!860) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (fp.lt ((_ to_fp 11 53) c_ack!860) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (bvslt a_ack!861 #x00000005)))
(assert (not (fp.gt ((_ to_fp 11 53) c_ack!860) ((_ to_fp 11 53) #x0000000000000000))))
(assert (fp.gt ((_ to_fp 11 53) roundNearestTiesToEven a_ack!861)
       ((_ to_fp 11 53) #x416312d000000000)))
(assert (not (fp.gt ((_ to_fp 11 53) c_ack!860) ((_ to_fp 11 53) #x0000000000000000))))
(assert (fp.geq ((_ to_fp 11 53) b_ack!859) ((_ to_fp 11 53) #x0000000000000000)))
(assert (not (fp.eq ((_ to_fp 11 53) b_ack!859) ((_ to_fp 11 53) #xc000000000000000))))
(assert (bvslt #x00000002 a_ack!861))
(assert (bvslt #x00000003 a_ack!861))
(assert (bvslt #x00000004 a_ack!861))
(assert (bvslt #x00000005 a_ack!861))
(assert (bvslt #x00000006 a_ack!861))
(assert (bvslt #x00000007 a_ack!861))
(assert (bvslt #x00000008 a_ack!861))
(assert (FPCHECK_FSUB_OVERFLOW
  (fp.add roundNearestTiesToEven
          (fp.add roundNearestTiesToEven
                  ((_ to_fp 11 53) #x4030000000000000)
                  ((_ to_fp 11 53) b_ack!859))
          ((_ to_fp 11 53) #x3ff0000000000000))
  c_ack!860))

(check-sat)
(exit)
