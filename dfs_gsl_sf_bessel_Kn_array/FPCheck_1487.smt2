(declare-fun a_ack!5894 () (_ BitVec 32))
(declare-fun b_ack!5892 () (_ BitVec 32))
(declare-fun c_ack!5893 () (_ BitVec 64))
(declare-fun FPCHECK_FMUL_UNDERFLOW
             ((_ BitVec 64) (_ FloatingPoint 11 53))
             Bool)
(declare-fun CF_exp ((_ FloatingPoint 11 53)) (_ FloatingPoint 11 53))
(assert (not (bvslt a_ack!5894 #x00000000)))
(assert (not (bvslt b_ack!5892 a_ack!5894)))
(assert (not (fp.leq ((_ to_fp 11 53) c_ack!5893) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (= #x00000000 b_ack!5892)))
(assert (not (fp.leq ((_ to_fp 11 53) c_ack!5893) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (fp.leq ((_ to_fp 11 53) c_ack!5893) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (fp.lt ((_ to_fp 11 53) c_ack!5893) ((_ to_fp 11 53) #x3ff0000000000000))))
(assert (not (fp.leq ((_ to_fp 11 53) c_ack!5893) ((_ to_fp 11 53) #x4020000000000000))))
(assert (not (fp.leq ((_ to_fp 11 53) c_ack!5893) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (fp.leq ((_ to_fp 11 53) c_ack!5893) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (fp.lt ((_ to_fp 11 53) c_ack!5893) ((_ to_fp 11 53) #x0020000000000000))))
(assert (not (fp.lt ((_ to_fp 11 53) c_ack!5893) ((_ to_fp 11 53) #x3ff0000000000000))))
(assert (not (fp.leq ((_ to_fp 11 53) c_ack!5893) ((_ to_fp 11 53) #x4020000000000000))))
(assert (not (bvsle (bvadd #x00000001 a_ack!5894) (bvadd #x00000001 b_ack!5892))))
(assert (bvsle #x00000000 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000001 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000002 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000003 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000004 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000005 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000006 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000007 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000008 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000009 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000000a (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000000b (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000000c (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000000d (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000000e (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000000f (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000010 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000011 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000012 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000013 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000014 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000015 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000016 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000017 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000018 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000019 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000001a (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000001b (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000001c (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000001d (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000001e (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000001f (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000020 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000021 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000022 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000023 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000024 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000025 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000026 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000027 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000028 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000029 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000002a (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000002b (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000002c (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000002d (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000002e (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000002f (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000030 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000031 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000032 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000033 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000034 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000035 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000036 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000037 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000038 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000039 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000003a (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000003b (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000003c (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000003d (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000003e (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000003f (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000040 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000041 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000042 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000043 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000044 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000045 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000046 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000047 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000048 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x00000049 (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000004a (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000004b (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000004c (bvsub b_ack!5892 a_ack!5894)))
(assert (bvsle #x0000004d (bvsub b_ack!5892 a_ack!5894)))
(assert (FPCHECK_FMUL_UNDERFLOW
  #x0000000000000000
  (CF_exp (fp.sub roundNearestTiesToEven
                  ((_ to_fp 11 53) #x8000000000000000)
                  ((_ to_fp 11 53) c_ack!5893)))))

(check-sat)
(exit)
