(declare-fun a_ack!449 () (_ BitVec 32))
(declare-fun b_ack!447 () (_ BitVec 32))
(declare-fun c_ack!448 () (_ BitVec 64))
(declare-fun FPCHECK_FMUL_OVERFLOW
             ((_ FloatingPoint 11 53) (_ FloatingPoint 11 53))
             Bool)
(assert (not (bvslt a_ack!449 #x00000000)))
(assert (not (bvslt b_ack!447 a_ack!449)))
(assert (not (fp.eq ((_ to_fp 11 53) c_ack!448) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (bvslt (bvadd #x00000001 b_ack!447) #x00000000)))
(assert (not (fp.lt ((_ to_fp 11 53) c_ack!448) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (= #xffffffff b_ack!447)))
(assert (= #x00000000 b_ack!447))
(assert (not (fp.eq (fp.abs ((_ to_fp 11 53) c_ack!448))
            ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (fp.lt (fp.abs ((_ to_fp 11 53) c_ack!448))
            ((_ to_fp 11 53) #x0020000000000000))))
(assert (fp.lt (fp.abs ((_ to_fp 11 53) c_ack!448))
       ((_ to_fp 11 53) #x3e66a09e667f3bcd)))
(assert (not (bvslt b_ack!447 #x00000000)))
(assert (not (fp.lt ((_ to_fp 11 53) c_ack!448) ((_ to_fp 11 53) #x0000000000000000))))
(assert (= #x00000000 b_ack!447))
(assert (not (fp.lt (fp.abs ((_ to_fp 11 53) c_ack!448))
            ((_ to_fp 11 53) #x3e60000000000000))))
(assert (fp.leq (fp.abs ((_ to_fp 11 53) c_ack!448))
        ((_ to_fp 11 53) #x4010000000000000)))
(assert (FPCHECK_FMUL_OVERFLOW
  (fp.mul roundNearestTiesToEven
          ((_ to_fp 11 53) #x3fc0000000000000)
          (fp.abs ((_ to_fp 11 53) c_ack!448)))
  (fp.abs ((_ to_fp 11 53) c_ack!448))))

(check-sat)
(exit)
