(declare-fun a_ack!4556 () (_ BitVec 32))
(declare-fun b_ack!4554 () (_ BitVec 32))
(declare-fun c_ack!4555 () (_ BitVec 64))
(declare-fun FPCHECK_FADD_UNDERFLOW
             ((_ FloatingPoint 11 53) (_ FloatingPoint 11 53))
             Bool)
(declare-fun CF_sin ((_ FloatingPoint 11 53)) (_ FloatingPoint 11 53))
(declare-fun CF_cos ((_ FloatingPoint 11 53)) (_ FloatingPoint 11 53))
(assert (not (bvslt a_ack!4556 #x00000000)))
(assert (not (bvslt b_ack!4554 a_ack!4556)))
(assert (not (fp.eq ((_ to_fp 11 53) c_ack!4555) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (bvslt (bvadd #x00000001 b_ack!4554) #x00000000)))
(assert (not (fp.lt ((_ to_fp 11 53) c_ack!4555) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (= #xffffffff b_ack!4554)))
(assert (= #x00000000 b_ack!4554))
(assert (not (fp.eq (fp.abs ((_ to_fp 11 53) c_ack!4555))
            ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (fp.lt (fp.abs ((_ to_fp 11 53) c_ack!4555))
            ((_ to_fp 11 53) #x0020000000000000))))
(assert (not (fp.lt (fp.abs ((_ to_fp 11 53) c_ack!4555))
            ((_ to_fp 11 53) #x3e66a09e667f3bcd))))
(assert (not (fp.lt (fp.abs ((_ to_fp 11 53) c_ack!4555))
            ((_ to_fp 11 53) #x4010000000000000))))
(assert (let ((a!1 (fp.abs (CF_cos (fp.abs ((_ to_fp 11 53) c_ack!4555)))))
      (a!2 (fp.abs (CF_sin (fp.abs ((_ to_fp 11 53) c_ack!4555))))))
  (FPCHECK_FADD_UNDERFLOW a!1 a!2)))

(check-sat)
(exit)
