(declare-fun a_ack!461 () (_ BitVec 32))
(declare-fun b_ack!459 () (_ BitVec 32))
(declare-fun c_ack!460 () (_ BitVec 64))
(declare-fun FPCHECK_FSUB_OVERFLOW ((_ FloatingPoint 11 53) (_ BitVec 64)) Bool)
(assert (not (bvslt a_ack!461 #x00000000)))
(assert (not (bvslt b_ack!459 a_ack!461)))
(assert (not (fp.eq ((_ to_fp 11 53) c_ack!460) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (bvslt (bvadd #x00000001 b_ack!459) #x00000000)))
(assert (not (fp.lt ((_ to_fp 11 53) c_ack!460) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (= #xffffffff b_ack!459)))
(assert (= #x00000000 b_ack!459))
(assert (not (fp.eq (fp.abs ((_ to_fp 11 53) c_ack!460))
            ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (fp.lt (fp.abs ((_ to_fp 11 53) c_ack!460))
            ((_ to_fp 11 53) #x0020000000000000))))
(assert (fp.lt (fp.abs ((_ to_fp 11 53) c_ack!460))
       ((_ to_fp 11 53) #x3e66a09e667f3bcd)))
(assert (not (bvslt b_ack!459 #x00000000)))
(assert (not (fp.lt ((_ to_fp 11 53) c_ack!460) ((_ to_fp 11 53) #x0000000000000000))))
(assert (= #x00000000 b_ack!459))
(assert (not (fp.lt (fp.abs ((_ to_fp 11 53) c_ack!460))
            ((_ to_fp 11 53) #x3e60000000000000))))
(assert (fp.leq (fp.abs ((_ to_fp 11 53) c_ack!460))
        ((_ to_fp 11 53) #x4010000000000000)))
(assert (let ((a!1 (fp.mul roundNearestTiesToEven
                   (fp.mul roundNearestTiesToEven
                           ((_ to_fp 11 53) #x3fc0000000000000)
                           (fp.abs ((_ to_fp 11 53) c_ack!460)))
                   (fp.abs ((_ to_fp 11 53) c_ack!460)))))
  (FPCHECK_FSUB_OVERFLOW a!1 #x3ff0000000000000)))

(check-sat)
(exit)
