(declare-fun a_ack!521 () (_ BitVec 32))
(declare-fun b_ack!519 () (_ BitVec 32))
(declare-fun c_ack!520 () (_ BitVec 64))
(declare-fun FPCHECK_FSUB_OVERFLOW ((_ FloatingPoint 11 53) (_ BitVec 64)) Bool)
(assert (not (bvslt a_ack!521 #x00000000)))
(assert (not (bvslt b_ack!519 a_ack!521)))
(assert (not (fp.eq ((_ to_fp 11 53) c_ack!520) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (bvslt (bvadd #x00000001 b_ack!519) #x00000000)))
(assert (not (fp.lt ((_ to_fp 11 53) c_ack!520) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (= #xffffffff b_ack!519)))
(assert (= #x00000000 b_ack!519))
(assert (not (fp.eq (fp.abs ((_ to_fp 11 53) c_ack!520))
            ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (fp.lt (fp.abs ((_ to_fp 11 53) c_ack!520))
            ((_ to_fp 11 53) #x0020000000000000))))
(assert (not (fp.lt (fp.abs ((_ to_fp 11 53) c_ack!520))
            ((_ to_fp 11 53) #x3e66a09e667f3bcd))))
(assert (not (fp.lt (fp.abs ((_ to_fp 11 53) c_ack!520))
            ((_ to_fp 11 53) #x4010000000000000))))
(assert (let ((a!1 (fp.div roundNearestTiesToEven
                   ((_ to_fp 11 53) #x4040000000000000)
                   (fp.mul roundNearestTiesToEven
                           (fp.abs ((_ to_fp 11 53) c_ack!520))
                           (fp.abs ((_ to_fp 11 53) c_ack!520))))))
  (FPCHECK_FSUB_OVERFLOW a!1 #x3ff0000000000000)))

(check-sat)
(exit)
