(declare-fun b_ack!2224 () (_ BitVec 32))
(declare-fun a_ack!2226 () (_ BitVec 32))
(declare-fun c_ack!2225 () (_ BitVec 64))
(declare-fun FPCHECK_FMUL_OVERFLOW ((_ FloatingPoint 11 53) (_ BitVec 64)) Bool)
(assert (not (bvslt b_ack!2224 #x00000000)))
(assert (not (bvslt a_ack!2226 #x00000000)))
(assert (not (= #x00000000 b_ack!2224)))
(assert (not (= #x00000001 b_ack!2224)))
(assert (not (= #x00000000 a_ack!2226)))
(assert (= #x00000001 a_ack!2226))
(assert (not (bvslt b_ack!2224 #x00000000)))
(assert (not (= #x00000000 b_ack!2224)))
(assert (not (= #x00000001 b_ack!2224)))
(assert (not (fp.eq ((_ to_fp 11 53) c_ack!2225) ((_ to_fp 11 53) #x0000000000000000))))
(assert (fp.gt (fp.abs ((_ to_fp 11 53) c_ack!2225))
       ((_ to_fp 11 53) #x3ff0000000000000)))
(assert (bvslt #x00000001 b_ack!2224))
(assert (let ((a!1 (fp.gt (fp.abs ((_ to_fp 11 53) c_ack!2225))
                  (fp.div roundNearestTiesToEven
                          ((_ to_fp 11 53) #x7feccccccccccccc)
                          (fp.abs ((_ to_fp 11 53) c_ack!2225))))))
  (not a!1)))
(assert (not (bvslt #x00000002 b_ack!2224)))
(assert (not (bvslt (bvadd #xffffffff b_ack!2224) #x00000000)))
(assert (not (= #x00000001 b_ack!2224)))
(assert (= #x00000002 b_ack!2224))
(assert (FPCHECK_FMUL_OVERFLOW
  ((_ to_fp 11 53) roundNearestTiesToEven b_ack!2224)
  c_ack!2225))

(check-sat)
(exit)
