(declare-fun b_ack!391 () (_ BitVec 32))
(declare-fun a_ack!393 () (_ BitVec 32))
(declare-fun c_ack!392 () (_ BitVec 64))
(declare-fun FPCHECK_FMUL_ACCURACY ((_ FloatingPoint 11 53) (_ BitVec 64)) Bool)
(assert (not (bvslt b_ack!391 #x00000000)))
(assert (not (bvslt a_ack!393 #x00000000)))
(assert (not (= #x00000000 b_ack!391)))
(assert (not (= #x00000001 b_ack!391)))
(assert (= #x00000000 a_ack!393))
(assert (not (bvslt b_ack!391 #x00000000)))
(assert (not (= #x00000000 b_ack!391)))
(assert (not (= #x00000001 b_ack!391)))
(assert (not (fp.eq ((_ to_fp 11 53) c_ack!392) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (fp.gt (fp.abs ((_ to_fp 11 53) c_ack!392))
            ((_ to_fp 11 53) #x3ff0000000000000))))
(assert (bvslt #x00000001 b_ack!391))
(assert (not (fp.gt (fp.abs ((_ to_fp 11 53) c_ack!392))
            ((_ to_fp 11 53) #x7fefffffffffffff))))
(assert (not (bvslt #x00000002 b_ack!391)))
(assert (let ((a!1 (fp.abs (fp.sub roundNearestTiesToEven
                           (fp.mul roundNearestTiesToEven
                                   ((_ to_fp 11 53) c_ack!392)
                                   ((_ to_fp 11 53) c_ack!392))
                           ((_ to_fp 11 53) #x3ff0000000000000)))))
  (FPCHECK_FMUL_ACCURACY a!1 #x3cb0000000000000)))

(check-sat)
(exit)
