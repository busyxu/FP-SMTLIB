(declare-fun x1_ack!620 () (_ BitVec 64))
(declare-fun x2_ack!618 () (_ BitVec 64))
(declare-fun y1_ack!617 () (_ BitVec 64))
(declare-fun FPCHECK_FMUL_OVERFLOW ((_ BitVec 64) (_ FloatingPoint 11 53)) Bool)
(declare-fun CF_log ((_ FloatingPoint 11 53)) (_ FloatingPoint 11 53))
(declare-fun y2_ack!619 () (_ BitVec 64))
(assert (not (fp.eq ((_ to_fp 11 53) x1_ack!620) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (fp.eq ((_ to_fp 11 53) x2_ack!618) ((_ to_fp 11 53) #x3ff0000000000000))))
(assert (not (fp.eq ((_ to_fp 11 53) x2_ack!618) ((_ to_fp 11 53) #xbff0000000000000))))
(assert (fp.geq (fp.abs ((_ to_fp 11 53) x1_ack!620))
        (fp.abs ((_ to_fp 11 53) y1_ack!617))))
(assert (not (fp.eq ((_ to_fp 11 53) x1_ack!620) ((_ to_fp 11 53) #x0000000000000000))))
(assert (let ((a!1 (fp.add roundNearestTiesToEven
                   (CF_log (fp.abs ((_ to_fp 11 53) x1_ack!620)))
                   ((_ to_fp 11 53) #x0000000000000000))))
  (FPCHECK_FMUL_OVERFLOW y2_ack!619 a!1)))

(check-sat)
(exit)
