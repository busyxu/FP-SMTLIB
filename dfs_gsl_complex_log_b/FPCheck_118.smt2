(declare-fun y1_ack!946 () (_ BitVec 64))
(declare-fun x1_ack!949 () (_ BitVec 64))
(declare-fun y2_ack!948 () (_ BitVec 64))
(declare-fun x2_ack!947 () (_ BitVec 64))
(declare-fun FPCHECK_FMUL_UNDERFLOW
             ((_ BitVec 64) (_ FloatingPoint 11 53))
             Bool)
(declare-fun CF_log ((_ FloatingPoint 11 53)) (_ FloatingPoint 11 53))
(assert (not (fp.geq (fp.abs ((_ to_fp 11 53) x1_ack!949))
             (fp.abs ((_ to_fp 11 53) y1_ack!946)))))
(assert (not (fp.eq ((_ to_fp 11 53) x1_ack!949) ((_ to_fp 11 53) #x0000000000000000))))
(assert (fp.geq (fp.abs ((_ to_fp 11 53) x2_ack!947))
        (fp.abs ((_ to_fp 11 53) y2_ack!948))))
(assert (let ((a!1 (and (fp.eq (fp.abs ((_ to_fp 11 53) y2_ack!948))
                       ((_ to_fp 11 53) #x0000000000000000))
                (fp.eq (fp.abs ((_ to_fp 11 53) x2_ack!947))
                       ((_ to_fp 11 53) #x0000000000000000)))))
  (not a!1)))
(assert (not (fp.eq ((_ to_fp 11 53) x2_ack!947) ((_ to_fp 11 53) #x0000000000000000))))
(assert (let ((a!1 (fp.add roundNearestTiesToEven
                   (CF_log (fp.abs ((_ to_fp 11 53) x2_ack!947)))
                   ((_ to_fp 11 53) #x0000000000000000))))
  (FPCHECK_FMUL_UNDERFLOW #x3f576c8c11b2dfb6 a!1)))

(check-sat)
(exit)
