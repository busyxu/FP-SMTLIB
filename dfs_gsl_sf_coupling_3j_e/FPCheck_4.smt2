(declare-fun a_ack!53 () (_ BitVec 32))
(declare-fun b_ack!48 () (_ BitVec 32))
(declare-fun c_ack!49 () (_ BitVec 32))
(declare-fun d_ack!50 () (_ BitVec 32))
(declare-fun e_ack!51 () (_ BitVec 32))
(declare-fun f_ack!52 () (_ BitVec 32))
(declare-fun FPCHECK_FSUB_OVERFLOW ((_ BitVec 64) (_ FloatingPoint 11 53)) Bool)
(declare-fun CF_log ((_ FloatingPoint 11 53)) (_ FloatingPoint 11 53))
(assert (not (bvslt a_ack!53 #x00000000)))
(assert (not (bvslt b_ack!48 #x00000000)))
(assert (not (bvslt c_ack!49 #x00000000)))
(assert (not (bvslt b_ack!48 #x00000000)))
(assert (not (bvslt (bvadd a_ack!53 c_ack!49) b_ack!48)))
(assert (= #x00000000 (bvand (bvadd a_ack!53 b_ack!48 c_ack!49) #x00000001)))
(assert (not (bvslt a_ack!53 #x00000000)))
(assert (not (bvslt b_ack!48 #x00000000)))
(assert (not (bvslt c_ack!49 #x00000000)))
(assert (= #x00000000 (bvand (bvadd a_ack!53 d_ack!50) #x00000001)))
(assert (= #x00000000 (bvand (bvadd b_ack!48 e_ack!51) #x00000001)))
(assert (= #x00000000 (bvand (bvadd c_ack!49 f_ack!52) #x00000001)))
(assert (= #x00000000 (bvadd d_ack!50 e_ack!51 f_ack!52)))
(assert (= #x00000000 d_ack!50))
(assert (= #x00000000 e_ack!51))
(assert (= #x00000000 f_ack!52))
(assert (not (= #x00000002 (bvsrem (bvadd a_ack!53 b_ack!48 c_ack!49) #x00000004))))
(assert (let ((a!1 (bvslt (bvsub (bvsdiv (bvadd b_ack!48 e_ack!51) #x00000002)
                         (bvsdiv (bvsub c_ack!49 f_ack!52) #x00000002))
                  #x00000000)))
  (not a!1)))
(assert (let ((a!1 (bvslt (bvsub (bvsdiv (bvsub a_ack!53 d_ack!50) #x00000002)
                         (bvsdiv (bvadd c_ack!49 f_ack!52) #x00000002))
                  (bvsub (bvsdiv (bvadd b_ack!48 e_ack!51) #x00000002)
                         (bvsdiv (bvsub c_ack!49 f_ack!52) #x00000002)))))
  (not a!1)))
(assert (let ((a!1 (bvslt (bvsdiv (bvsub (bvadd a_ack!53 b_ack!48) c_ack!49) #x00000002)
                  (bvsdiv (bvsub a_ack!53 d_ack!50) #x00000002))))
  (not a!1)))
(assert (not (bvslt (bvsdiv (bvsub a_ack!53 d_ack!50) #x00000002)
            (bvsdiv (bvadd b_ack!48 e_ack!51) #x00000002))))
(assert (let ((a!1 (bvult a_ack!53
                  (bvsdiv (bvsub (bvadd a_ack!53 b_ack!48) c_ack!49) #x00000002))))
  (not a!1)))
(assert (= (bvsdiv (bvsub (bvadd a_ack!53 b_ack!48) c_ack!49) #x00000002) a_ack!53))
(assert (let ((a!1 (bvult b_ack!48
                  (bvsdiv (bvsub (bvadd a_ack!53 b_ack!48) c_ack!49) #x00000002))))
  (not a!1)))
(assert (= (bvsdiv (bvsub (bvadd a_ack!53 b_ack!48) c_ack!49) #x00000002) b_ack!48))
(assert (let ((a!1 (bvadd #x00000001
                  (bvsdiv (bvadd (bvadd a_ack!53 b_ack!48) c_ack!49) #x00000002))))
(let ((a!2 (bvult a!1
                  (bvsdiv (bvsub (bvadd a_ack!53 b_ack!48) c_ack!49) #x00000002))))
  (not a!2))))
(assert (let ((a!1 (bvadd #x00000001
                  (bvsdiv (bvadd (bvadd a_ack!53 b_ack!48) c_ack!49) #x00000002))))
(let ((a!2 (= (bvsdiv (bvsub (bvadd a_ack!53 b_ack!48) c_ack!49) #x00000002)
              a!1)))
  (not a!2))))
(assert (= #x00000000 (bvsdiv (bvsub (bvadd a_ack!53 b_ack!48) c_ack!49) #x00000002)))
(assert (not (bvult a_ack!53 (bvsdiv (bvsub a_ack!53 d_ack!50) #x00000002))))
(assert (= (bvsdiv (bvsub a_ack!53 d_ack!50) #x00000002) a_ack!53))
(assert (not (bvult b_ack!48 (bvsdiv (bvsub b_ack!48 e_ack!51) #x00000002))))
(assert (= (bvsdiv (bvsub b_ack!48 e_ack!51) #x00000002) b_ack!48))
(assert (not (bvult c_ack!49 (bvsdiv (bvadd c_ack!49 f_ack!52) #x00000002))))
(assert (= (bvsdiv (bvadd c_ack!49 f_ack!52) #x00000002) c_ack!49))
(assert (FPCHECK_FSUB_OVERFLOW
  #x0000000000000000
  (CF_log (fp.add roundNearestTiesToEven
                  ((_ to_fp 11 53) roundNearestTiesToEven c_ack!49)
                  ((_ to_fp 11 53) #x3ff0000000000000)))))

(check-sat)
(exit)
