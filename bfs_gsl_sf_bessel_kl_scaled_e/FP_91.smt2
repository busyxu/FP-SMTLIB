(declare-fun a_ack!1158 () (_ BitVec 32))
(declare-fun b_ack!1157 () (_ BitVec 64))
(assert (not (bvslt a_ack!1158 #x00000000)))
(assert (not (fp.leq ((_ to_fp 11 53) b_ack!1157) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (= #x00000000 a_ack!1158)))
(assert (not (= #x00000001 a_ack!1158)))
(assert (not (= #x00000002 a_ack!1158)))
(assert (fp.lt ((_ to_fp 11 53) b_ack!1157) ((_ to_fp 11 53) #x4008000000000000)))
(assert (not (bvslt (bvadd #x00000001 a_ack!1158) #x00000000)))
(assert (= #x00000000 (bvand (bvadd #x00000001 a_ack!1158) #x00000001)))
(assert (let ((a!1 (ite (= ((_ extract 31 31) (bvadd #x00000001 a_ack!1158)) #b1)
                (concat #b1 ((_ extract 31 1) (bvadd #x00000001 a_ack!1158)))
                (concat #b0 ((_ extract 31 1) (bvadd #x00000001 a_ack!1158))))))
  (not (= #x00000000 a!1))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) (bvadd #x00000001 a_ack!1158)) #b1)
                (concat #b1 ((_ extract 31 1) (bvadd #x00000001 a_ack!1158)))
                (concat #b0 ((_ extract 31 1) (bvadd #x00000001 a_ack!1158))))))
  (not (= #x00000000 (bvand a!1 #x00000001)))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) (bvadd #x00000001 a_ack!1158)) #b1)
                (concat #b1 ((_ extract 31 1) (bvadd #x00000001 a_ack!1158)))
                (concat #b0 ((_ extract 31 1) (bvadd #x00000001 a_ack!1158))))))
(let ((a!2 (= #x00000000
              (ite (= ((_ extract 31 31) a!1) #b1)
                   (concat #b1 ((_ extract 31 1) a!1))
                   (concat #b0 ((_ extract 31 1) a!1))))))
  (not a!2))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) (bvadd #x00000001 a_ack!1158)) #b1)
                (concat #b1 ((_ extract 31 1) (bvadd #x00000001 a_ack!1158)))
                (concat #b0 ((_ extract 31 1) (bvadd #x00000001 a_ack!1158))))))
(let ((a!2 (bvand (ite (= ((_ extract 31 31) a!1) #b1)
                       (concat #b1 ((_ extract 31 1) a!1))
                       (concat #b0 ((_ extract 31 1) a!1)))
                  #x00000001)))
  (not (= #x00000000 a!2)))))

(check-sat)
(exit)
