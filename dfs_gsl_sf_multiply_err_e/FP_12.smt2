(declare-fun a_ack!113 () (_ BitVec 64))
(declare-fun c_ack!112 () (_ BitVec 64))
(assert (not (fp.eq ((_ to_fp 11 53) a_ack!113) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (fp.eq ((_ to_fp 11 53) c_ack!112) ((_ to_fp 11 53) #x0000000000000000))))
(assert (fp.leq (fp.abs ((_ to_fp 11 53) a_ack!113))
        ((_ to_fp 11 53) #x3ff0000000000000)))
(assert (not (fp.geq (fp.abs ((_ to_fp 11 53) c_ack!112))
             ((_ to_fp 11 53) #x3ff0000000000000))))
(assert (fp.leq (fp.abs ((_ to_fp 11 53) c_ack!112))
        ((_ to_fp 11 53) #x3ff0000000000000)))
(assert (not (fp.geq (fp.abs ((_ to_fp 11 53) a_ack!113))
             ((_ to_fp 11 53) #x3ff0000000000000))))
(assert (not (fp.lt (fp.abs ((_ to_fp 11 53) a_ack!113))
            (fp.abs ((_ to_fp 11 53) c_ack!112)))))
(assert (fp.gt (fp.abs ((_ to_fp 11 53) a_ack!113))
       (fp.abs ((_ to_fp 11 53) c_ack!112))))
(assert (fp.lt (fp.abs ((_ to_fp 11 53) a_ack!113))
       ((_ to_fp 11 53) #x5feccccccccccccc)))
(assert (not (fp.eq (fp.abs ((_ to_fp 11 53) a_ack!113))
            ((_ to_fp 11 53) #x0000000000000000))))
(assert (fp.eq (fp.div roundNearestTiesToEven
               (fp.mul roundNearestTiesToEven
                       ((_ to_fp 11 53) a_ack!113)
                       ((_ to_fp 11 53) c_ack!112))
               ((_ to_fp 11 53) a_ack!113))
       ((_ to_fp 11 53) c_ack!112)))
(assert (not (fp.eq (fp.abs ((_ to_fp 11 53) c_ack!112))
            ((_ to_fp 11 53) #x0000000000000000))))
(assert (fp.eq (fp.div roundNearestTiesToEven
               (fp.mul roundNearestTiesToEven
                       ((_ to_fp 11 53) a_ack!113)
                       ((_ to_fp 11 53) c_ack!112))
               ((_ to_fp 11 53) c_ack!112))
       ((_ to_fp 11 53) a_ack!113)))

(check-sat)
(exit)
