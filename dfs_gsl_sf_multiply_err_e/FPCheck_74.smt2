(declare-fun a_ack!468 () (_ BitVec 64))
(declare-fun c_ack!467 () (_ BitVec 64))
(declare-fun FPCHECK_FMUL_UNDERFLOW ((_ BitVec 64) (_ BitVec 64)) Bool)
(declare-fun b_ack!466 () (_ BitVec 64))
(assert (not (fp.eq ((_ to_fp 11 53) a_ack!468) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (fp.eq ((_ to_fp 11 53) c_ack!467) ((_ to_fp 11 53) #x0000000000000000))))
(assert (fp.leq (fp.abs ((_ to_fp 11 53) a_ack!468))
        ((_ to_fp 11 53) #x3ff0000000000000)))
(assert (not (fp.geq (fp.abs ((_ to_fp 11 53) c_ack!467))
             ((_ to_fp 11 53) #x3ff0000000000000))))
(assert (fp.leq (fp.abs ((_ to_fp 11 53) c_ack!467))
        ((_ to_fp 11 53) #x3ff0000000000000)))
(assert (not (fp.geq (fp.abs ((_ to_fp 11 53) a_ack!468))
             ((_ to_fp 11 53) #x3ff0000000000000))))
(assert (fp.lt (fp.abs ((_ to_fp 11 53) a_ack!468))
       (fp.abs ((_ to_fp 11 53) c_ack!467))))
(assert (not (fp.gt (fp.abs ((_ to_fp 11 53) a_ack!468))
            (fp.abs ((_ to_fp 11 53) c_ack!467)))))
(assert (fp.lt (fp.abs ((_ to_fp 11 53) c_ack!467))
       ((_ to_fp 11 53) #x5feccccccccccccc)))
(assert (let ((a!1 (fp.lt (fp.abs (fp.mul roundNearestTiesToEven
                                  ((_ to_fp 11 53) a_ack!468)
                                  ((_ to_fp 11 53) c_ack!467)))
                  ((_ to_fp 11 53) #x0010000000000000))))
  (not a!1)))
(assert (FPCHECK_FMUL_UNDERFLOW b_ack!466 c_ack!467))

(check-sat)
(exit)
