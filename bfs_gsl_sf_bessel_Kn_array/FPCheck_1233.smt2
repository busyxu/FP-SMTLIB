(declare-fun a_ack!4807 () (_ BitVec 32))
(declare-fun b_ack!4805 () (_ BitVec 32))
(declare-fun c_ack!4806 () (_ BitVec 64))
(declare-fun FPCHECK_FMUL_OVERFLOW ((_ BitVec 64) (_ FloatingPoint 11 53)) Bool)
(declare-fun CF_exp ((_ FloatingPoint 11 53)) (_ FloatingPoint 11 53))
(assert (not (bvslt a_ack!4807 #x00000000)))
(assert (not (bvslt b_ack!4805 a_ack!4807)))
(assert (not (fp.leq ((_ to_fp 11 53) c_ack!4806) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (= #x00000000 b_ack!4805)))
(assert (not (fp.leq ((_ to_fp 11 53) c_ack!4806) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (fp.leq ((_ to_fp 11 53) c_ack!4806) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (fp.lt ((_ to_fp 11 53) c_ack!4806) ((_ to_fp 11 53) #x3ff0000000000000))))
(assert (not (fp.leq ((_ to_fp 11 53) c_ack!4806) ((_ to_fp 11 53) #x4020000000000000))))
(assert (not (fp.leq ((_ to_fp 11 53) c_ack!4806) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (fp.leq ((_ to_fp 11 53) c_ack!4806) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (fp.lt ((_ to_fp 11 53) c_ack!4806) ((_ to_fp 11 53) #x0020000000000000))))
(assert (not (fp.lt ((_ to_fp 11 53) c_ack!4806) ((_ to_fp 11 53) #x3ff0000000000000))))
(assert (not (fp.leq ((_ to_fp 11 53) c_ack!4806) ((_ to_fp 11 53) #x4020000000000000))))
(assert (not (bvsle (bvadd #x00000001 a_ack!4807) (bvadd #x00000001 b_ack!4805))))
(assert (bvsle #x00000000 (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x00000001 (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x00000002 (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x00000003 (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x00000004 (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x00000005 (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x00000006 (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x00000007 (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x00000008 (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x00000009 (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x0000000a (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x0000000b (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x0000000c (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x0000000d (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x0000000e (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x0000000f (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x00000010 (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x00000011 (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x00000012 (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x00000013 (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x00000014 (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x00000015 (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x00000016 (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x00000017 (bvsub b_ack!4805 a_ack!4807)))
(assert (bvsle #x00000018 (bvsub b_ack!4805 a_ack!4807)))
(assert (FPCHECK_FMUL_OVERFLOW
  #x0000000000000000
  (CF_exp (fp.sub roundNearestTiesToEven
                  ((_ to_fp 11 53) #x8000000000000000)
                  ((_ to_fp 11 53) c_ack!4806)))))

(check-sat)
(exit)
