(declare-fun c_ack!167 () (_ BitVec 64))
(declare-fun b_ack!166 () (_ BitVec 32))
(declare-fun a_ack!168 () (_ BitVec 32))
(declare-fun FPCHECK_FDIV_INVALID ((_ BitVec 64) (_ FloatingPoint 11 53)) Bool)
(assert (not (fp.eq ((_ to_fp 11 53) c_ack!167) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (= a_ack!168 b_ack!166)))
(assert (not (= #x00000000 b_ack!166)))
(assert (not (= #x00000000 a_ack!168)))
(assert (not (bvslt b_ack!166 #x00000000)))
(assert (not (fp.gt ((_ to_fp 11 53) c_ack!167) ((_ to_fp 11 53) #x4059000000000000))))
(assert (not (fp.lt ((_ to_fp 11 53) c_ack!167) ((_ to_fp 11 53) #xc059000000000000))))
(assert (not (bvslt a_ack!168 #x00000000)))
(assert (not (bvslt a_ack!168 #x00000000)))
(assert (not (= a_ack!168 b_ack!166)))
(assert (not (= #x00000001 a_ack!168)))
(assert (not (= b_ack!166 (bvadd #x00000001 a_ack!168))))
(assert (not (= a_ack!168 (bvadd #x00000001 b_ack!166))))
(assert (not (= a_ack!168 (bvadd #x00000002 b_ack!166))))
(assert (not (= b_ack!166 (bvmul #x00000002 a_ack!168))))
(assert (bvslt b_ack!166 #x0000000a))
(assert (bvslt a_ack!168 #x0000000a))
(assert (not (fp.lt (fp.abs ((_ to_fp 11 53) c_ack!167))
            ((_ to_fp 11 53) #x4014000000000000))))
(assert (let ((a!1 (fp.gt ((_ to_fp 11 53) roundNearestTiesToEven b_ack!166)
                  (fp.mul roundNearestTiesToEven
                          ((_ to_fp 11 53) roundNearestTiesToEven a_ack!168)
                          (fp.abs ((_ to_fp 11 53) c_ack!167))))))
  (not a!1)))
(assert (not (bvslt a_ack!168 b_ack!166)))
(assert (not (bvslt a_ack!168 b_ack!166)))
(assert (not (bvslt a_ack!168 b_ack!166)))
(assert (fp.geq ((_ to_fp 11 53) c_ack!167) ((_ to_fp 11 53) #x0000000000000000)))
(assert (bvslt b_ack!166 a_ack!168))
(assert (FPCHECK_FDIV_INVALID
  c_ack!167
  ((_ to_fp 11 53) roundNearestTiesToEven b_ack!166)))

(check-sat)
(exit)
