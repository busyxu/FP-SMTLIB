(declare-fun c_ack!101 () (_ BitVec 64))
(declare-fun b_ack!100 () (_ BitVec 32))
(declare-fun a_ack!102 () (_ BitVec 32))
(declare-fun FPCHECK_FMUL_OVERFLOW ((_ BitVec 64) (_ FloatingPoint 11 53)) Bool)
(assert (not (fp.eq ((_ to_fp 11 53) c_ack!101) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (= a_ack!102 b_ack!100)))
(assert (not (= #x00000000 b_ack!100)))
(assert (not (= #x00000000 a_ack!102)))
(assert (not (bvslt b_ack!100 #x00000000)))
(assert (not (fp.gt ((_ to_fp 11 53) c_ack!101) ((_ to_fp 11 53) #x4059000000000000))))
(assert (not (fp.lt ((_ to_fp 11 53) c_ack!101) ((_ to_fp 11 53) #xc059000000000000))))
(assert (not (bvslt a_ack!102 #x00000000)))
(assert (not (bvslt a_ack!102 #x00000000)))
(assert (not (= a_ack!102 b_ack!100)))
(assert (not (= #x00000001 a_ack!102)))
(assert (not (= b_ack!100 (bvadd #x00000001 a_ack!102))))
(assert (not (= a_ack!102 (bvadd #x00000001 b_ack!100))))
(assert (not (= a_ack!102 (bvadd #x00000002 b_ack!100))))
(assert (not (= b_ack!100 (bvmul #x00000002 a_ack!102))))
(assert (bvslt b_ack!100 #x0000000a))
(assert (bvslt a_ack!102 #x0000000a))
(assert (fp.lt (fp.abs ((_ to_fp 11 53) c_ack!101))
       ((_ to_fp 11 53) #x4014000000000000)))
(assert (not (fp.eq ((_ to_fp 11 53) roundNearestTiesToEven b_ack!100)
            ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (fp.eq ((_ to_fp 11 53) roundNearestTiesToEven a_ack!102)
            ((_ to_fp 11 53) #x0000000000000000))))
(assert (FPCHECK_FMUL_OVERFLOW
  c_ack!101
  (fp.div roundNearestTiesToEven
          ((_ to_fp 11 53) roundNearestTiesToEven a_ack!102)
          (fp.mul roundNearestTiesToEven
                  ((_ to_fp 11 53) roundNearestTiesToEven b_ack!100)
                  ((_ to_fp 11 53) #x3ff0000000000000)))))

(check-sat)
(exit)
