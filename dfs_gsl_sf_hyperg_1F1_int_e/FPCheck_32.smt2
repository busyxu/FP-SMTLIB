(declare-fun c_ack!194 () (_ BitVec 64))
(declare-fun b_ack!193 () (_ BitVec 32))
(declare-fun a_ack!195 () (_ BitVec 32))
(declare-fun FPCHECK_FMUL_UNDERFLOW
             ((_ BitVec 64) (_ FloatingPoint 11 53))
             Bool)
(assert (not (fp.eq ((_ to_fp 11 53) c_ack!194) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (= a_ack!195 b_ack!193)))
(assert (not (= #x00000000 b_ack!193)))
(assert (not (= #x00000000 a_ack!195)))
(assert (not (bvslt b_ack!193 #x00000000)))
(assert (not (fp.gt ((_ to_fp 11 53) c_ack!194) ((_ to_fp 11 53) #x4059000000000000))))
(assert (not (fp.lt ((_ to_fp 11 53) c_ack!194) ((_ to_fp 11 53) #xc059000000000000))))
(assert (not (bvslt a_ack!195 #x00000000)))
(assert (not (bvslt a_ack!195 #x00000000)))
(assert (not (= a_ack!195 b_ack!193)))
(assert (not (= #x00000001 a_ack!195)))
(assert (not (= b_ack!193 (bvadd #x00000001 a_ack!195))))
(assert (not (= a_ack!195 (bvadd #x00000001 b_ack!193))))
(assert (not (= a_ack!195 (bvadd #x00000002 b_ack!193))))
(assert (not (= b_ack!193 (bvmul #x00000002 a_ack!195))))
(assert (bvslt b_ack!193 #x0000000a))
(assert (bvslt a_ack!195 #x0000000a))
(assert (not (fp.lt (fp.abs ((_ to_fp 11 53) c_ack!194))
            ((_ to_fp 11 53) #x4014000000000000))))
(assert (let ((a!1 (fp.gt ((_ to_fp 11 53) roundNearestTiesToEven b_ack!193)
                  (fp.mul roundNearestTiesToEven
                          ((_ to_fp 11 53) roundNearestTiesToEven a_ack!195)
                          (fp.abs ((_ to_fp 11 53) c_ack!194))))))
  (not a!1)))
(assert (not (bvslt a_ack!195 b_ack!193)))
(assert (not (bvslt a_ack!195 b_ack!193)))
(assert (not (bvslt a_ack!195 b_ack!193)))
(assert (not (fp.geq ((_ to_fp 11 53) c_ack!194) ((_ to_fp 11 53) #x0000000000000000))))
(assert (FPCHECK_FMUL_UNDERFLOW
  #x3fe0000000000000
  (fp.sub roundNearestTiesToEven
          ((_ to_fp 11 53) roundNearestTiesToEven b_ack!193)
          ((_ to_fp 11 53) c_ack!194))))

(check-sat)
(exit)
