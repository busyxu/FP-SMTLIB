(declare-fun c_ack!62 () (_ BitVec 64))
(declare-fun b_ack!61 () (_ BitVec 32))
(declare-fun a_ack!63 () (_ BitVec 32))
(declare-fun FPCHECK_FMUL_OVERFLOW ((_ FloatingPoint 11 53) (_ BitVec 64)) Bool)
(assert (not (fp.eq ((_ to_fp 11 53) c_ack!62) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (= a_ack!63 b_ack!61)))
(assert (not (= #x00000000 b_ack!61)))
(assert (not (= #x00000000 a_ack!63)))
(assert (not (bvslt b_ack!61 #x00000000)))
(assert (not (fp.gt ((_ to_fp 11 53) c_ack!62) ((_ to_fp 11 53) #x4059000000000000))))
(assert (not (fp.lt ((_ to_fp 11 53) c_ack!62) ((_ to_fp 11 53) #xc059000000000000))))
(assert (not (bvslt a_ack!63 #x00000000)))
(assert (not (bvslt a_ack!63 #x00000000)))
(assert (not (= a_ack!63 b_ack!61)))
(assert (not (= #x00000001 a_ack!63)))
(assert (not (= b_ack!61 (bvadd #x00000001 a_ack!63))))
(assert (not (= a_ack!63 (bvadd #x00000001 b_ack!61))))
(assert (not (= a_ack!63 (bvadd #x00000002 b_ack!61))))
(assert (not (= b_ack!61 (bvmul #x00000002 a_ack!63))))
(assert (bvslt b_ack!61 #x0000000a))
(assert (bvslt a_ack!63 #x0000000a))
(assert (fp.lt (fp.abs ((_ to_fp 11 53) c_ack!62)) ((_ to_fp 11 53) #x4014000000000000)))
(assert (not (fp.eq ((_ to_fp 11 53) roundNearestTiesToEven b_ack!61)
            ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (fp.eq ((_ to_fp 11 53) roundNearestTiesToEven a_ack!63)
            ((_ to_fp 11 53) #x0000000000000000))))
(assert (FPCHECK_FMUL_OVERFLOW
  ((_ to_fp 11 53) roundNearestTiesToEven b_ack!61)
  #x3ff0000000000000))

(check-sat)
(exit)
