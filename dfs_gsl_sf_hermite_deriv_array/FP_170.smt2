(declare-fun b_ack!2890 () (_ BitVec 32))
(declare-fun a_ack!2892 () (_ BitVec 32))
(declare-fun c_ack!2891 () (_ BitVec 64))
(assert (not (bvslt b_ack!2890 #x00000000)))
(assert (not (bvslt a_ack!2892 #x00000000)))
(assert (not (= #x00000000 b_ack!2890)))
(assert (not (= #x00000001 b_ack!2890)))
(assert (not (= #x00000000 a_ack!2892)))
(assert (not (= #x00000001 a_ack!2892)))
(assert (not (bvslt (bvsub b_ack!2890 a_ack!2892) #x00000000)))
(assert (not (bvslt (bvsub b_ack!2890 a_ack!2892) #x00000000)))
(assert (not (= #x00000000 (bvsub b_ack!2890 a_ack!2892))))
(assert (not (= #x00000001 (bvsub b_ack!2890 a_ack!2892))))
(assert (fp.eq ((_ to_fp 11 53) c_ack!2891) ((_ to_fp 11 53) #x0000000000000000)))
(assert (= #x00000000 (bvand (bvsub b_ack!2890 a_ack!2892) #x00000001)))
(assert (not (bvslt #x00000129 (bvadd #xffffffff (bvsub b_ack!2890 a_ack!2892)))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) (bvsub b_ack!2890 a_ack!2892)) #b1)
                (concat #b1 ((_ extract 31 1) (bvsub b_ack!2890 a_ack!2892)))
                (concat #b0 ((_ extract 31 1) (bvsub b_ack!2890 a_ack!2892))))))
  (not (bvslt a!1 #x00000000))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) (bvsub b_ack!2890 a_ack!2892)) #b1)
                (concat #b1 ((_ extract 31 1) (bvsub b_ack!2890 a_ack!2892)))
                (concat #b0 ((_ extract 31 1) (bvsub b_ack!2890 a_ack!2892))))))
  (= #x00000000 (bvand a!1 #x00000001))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) (bvsub b_ack!2890 a_ack!2892)) #b1)
                (concat #b1 ((_ extract 31 1) (bvsub b_ack!2890 a_ack!2892)))
                (concat #b0 ((_ extract 31 1) (bvsub b_ack!2890 a_ack!2892))))))
  (not (= #x00000000 (concat #b0 ((_ extract 31 1) a!1))))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) (bvsub b_ack!2890 a_ack!2892)) #b1)
                (concat #b1 ((_ extract 31 1) (bvsub b_ack!2890 a_ack!2892)))
                (concat #b0 ((_ extract 31 1) (bvsub b_ack!2890 a_ack!2892))))))
  (= #x00000000 (bvand (concat #b0 ((_ extract 31 1) a!1)) #x00000001))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) (bvsub b_ack!2890 a_ack!2892)) #b1)
                (concat #b1 ((_ extract 31 1) (bvsub b_ack!2890 a_ack!2892)))
                (concat #b0 ((_ extract 31 1) (bvsub b_ack!2890 a_ack!2892))))))
(let ((a!2 (concat #b0 ((_ extract 31 1) (concat #b0 ((_ extract 31 1) a!1))))))
  (not (= #x00000000 a!2)))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) (bvsub b_ack!2890 a_ack!2892)) #b1)
                (concat #b1 ((_ extract 31 1) (bvsub b_ack!2890 a_ack!2892)))
                (concat #b0 ((_ extract 31 1) (bvsub b_ack!2890 a_ack!2892))))))
(let ((a!2 (concat #b0 ((_ extract 31 1) (concat #b0 ((_ extract 31 1) a!1))))))
  (= #x00000000 (bvand a!2 #x00000001)))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) (bvsub b_ack!2890 a_ack!2892)) #b1)
                (concat #b1 ((_ extract 31 1) (bvsub b_ack!2890 a_ack!2892)))
                (concat #b0 ((_ extract 31 1) (bvsub b_ack!2890 a_ack!2892))))))
(let ((a!2 (concat #b0 ((_ extract 31 1) (concat #b0 ((_ extract 31 1) a!1))))))
  (not (= #x00000000 (concat #b0 ((_ extract 31 1) a!2)))))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) (bvsub b_ack!2890 a_ack!2892)) #b1)
                (concat #b1 ((_ extract 31 1) (bvsub b_ack!2890 a_ack!2892)))
                (concat #b0 ((_ extract 31 1) (bvsub b_ack!2890 a_ack!2892))))))
(let ((a!2 (concat #b0 ((_ extract 31 1) (concat #b0 ((_ extract 31 1) a!1))))))
(let ((a!3 (= #x00000000 (bvand (concat #b0 ((_ extract 31 1) a!2)) #x00000001))))
  (not a!3)))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) (bvsub b_ack!2890 a_ack!2892)) #b1)
                (concat #b1 ((_ extract 31 1) (bvsub b_ack!2890 a_ack!2892)))
                (concat #b0 ((_ extract 31 1) (bvsub b_ack!2890 a_ack!2892))))))
(let ((a!2 (concat #b0 ((_ extract 31 1) (concat #b0 ((_ extract 31 1) a!1))))))
(let ((a!3 (concat #b0 ((_ extract 31 1) (concat #b0 ((_ extract 31 1) a!2))))))
  (= #x00000000 a!3)))))
(assert (not (bvult (bvadd #xffffffff (bvsub b_ack!2890 a_ack!2892)) #x0000001a)))

(check-sat)
(exit)
