(declare-fun b_ack!445 () (_ BitVec 32))
(declare-fun a_ack!447 () (_ BitVec 32))
(declare-fun c_ack!446 () (_ BitVec 64))
(declare-fun FPCHECK_FMUL_OVERFLOW ((_ BitVec 64) (_ FloatingPoint 11 53)) Bool)
(assert (not (bvslt b_ack!445 #x00000000)))
(assert (not (bvslt a_ack!447 #x00000000)))
(assert (not (bvslt b_ack!445 a_ack!447)))
(assert (not (bvult b_ack!445 a_ack!447)))
(assert (not (= a_ack!447 b_ack!445)))
(assert (= #x00000000 a_ack!447))
(assert (bvult a_ack!447 #x00000012))
(assert (bvult #x0000000000000000
       (bvadd #x0000000000000008
              (bvmul #x0000000000000018 (concat #x00000000 a_ack!447)))))
(assert (bvult (bvadd #x0000000000000008
              (bvmul #x0000000000000018 (concat #x00000000 a_ack!447)))
       #x0000000000001001))
(assert (not (bvslt a_ack!447 #x00000000)))
(assert (= #x00000000 (bvand a_ack!447 #x00000001)))
(assert (= #x00000000
   (ite (= ((_ extract 31 31) a_ack!447) #b1)
        (concat #b1 ((_ extract 31 1) a_ack!447))
        (concat #b0 ((_ extract 31 1) a_ack!447)))))
(assert (not (bvslt (bvsub b_ack!445 a_ack!447) #x00000000)))
(assert (not (= #x00000000 (bvsub b_ack!445 a_ack!447))))
(assert (not (= #x00000001 (bvsub b_ack!445 a_ack!447))))
(assert (not (fp.eq ((_ to_fp 11 53) c_ack!446) ((_ to_fp 11 53) #x0000000000000000))))
(assert (let ((a!1 (fp.gt (fp.abs (fp.mul roundNearestTiesToEven
                                  ((_ to_fp 11 53) #x4000000000000000)
                                  ((_ to_fp 11 53) c_ack!446)))
                  ((_ to_fp 11 53) #x3ff0000000000000))))
  (not a!1)))
(assert (FPCHECK_FMUL_OVERFLOW #x4000000000000000 (fp.abs ((_ to_fp 11 53) c_ack!446))))

(check-sat)
(exit)
