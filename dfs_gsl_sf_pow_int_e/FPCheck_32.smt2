(declare-fun b_ack!136 () (_ BitVec 32))
(declare-fun FPCHECK_FMUL_ACCURACY
             ((_ FloatingPoint 11 53) (_ FloatingPoint 11 53))
             Bool)
(declare-fun a_ack!137 () (_ BitVec 64))
(assert (not (bvslt b_ack!136 #x00000000)))
(assert (not (= #x00000000 (bvand b_ack!136 #x00000001))))
(assert (let ((a!1 (= #x00000000
              (ite (= ((_ extract 31 31) b_ack!136) #b1)
                   (concat #b1 ((_ extract 31 1) b_ack!136))
                   (concat #b0 ((_ extract 31 1) b_ack!136))))))
  (not a!1)))
(assert (let ((a!1 (bvand (ite (= ((_ extract 31 31) b_ack!136) #b1)
                       (concat #b1 ((_ extract 31 1) b_ack!136))
                       (concat #b0 ((_ extract 31 1) b_ack!136)))
                  #x00000001)))
  (not (= #x00000000 a!1))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) b_ack!136) #b1)
                (concat #b1 ((_ extract 31 1) b_ack!136))
                (concat #b0 ((_ extract 31 1) b_ack!136)))))
(let ((a!2 (= #x00000000
              (ite (= ((_ extract 31 31) a!1) #b1)
                   (concat #b1 ((_ extract 31 1) a!1))
                   (concat #b0 ((_ extract 31 1) a!1))))))
  (not a!2))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) b_ack!136) #b1)
                (concat #b1 ((_ extract 31 1) b_ack!136))
                (concat #b0 ((_ extract 31 1) b_ack!136)))))
(let ((a!2 (bvand (ite (= ((_ extract 31 31) a!1) #b1)
                       (concat #b1 ((_ extract 31 1) a!1))
                       (concat #b0 ((_ extract 31 1) a!1)))
                  #x00000001)))
  (= #x00000000 a!2))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) b_ack!136) #b1)
                (concat #b1 ((_ extract 31 1) b_ack!136))
                (concat #b0 ((_ extract 31 1) b_ack!136)))))
(let ((a!2 (ite (= ((_ extract 31 31) a!1) #b1)
                (concat #b1 ((_ extract 31 1) a!1))
                (concat #b0 ((_ extract 31 1) a!1)))))
(let ((a!3 (= #x00000000
              (ite (= ((_ extract 31 31) a!2) #b1)
                   (concat #b1 ((_ extract 31 1) a!2))
                   (concat #b0 ((_ extract 31 1) a!2))))))
  (not a!3)))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) b_ack!136) #b1)
                (concat #b1 ((_ extract 31 1) b_ack!136))
                (concat #b0 ((_ extract 31 1) b_ack!136)))))
(let ((a!2 (ite (= ((_ extract 31 31) a!1) #b1)
                (concat #b1 ((_ extract 31 1) a!1))
                (concat #b0 ((_ extract 31 1) a!1)))))
(let ((a!3 (bvand (ite (= ((_ extract 31 31) a!2) #b1)
                       (concat #b1 ((_ extract 31 1) a!2))
                       (concat #b0 ((_ extract 31 1) a!2)))
                  #x00000001)))
  (= #x00000000 a!3)))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) b_ack!136) #b1)
                (concat #b1 ((_ extract 31 1) b_ack!136))
                (concat #b0 ((_ extract 31 1) b_ack!136)))))
(let ((a!2 (ite (= ((_ extract 31 31) a!1) #b1)
                (concat #b1 ((_ extract 31 1) a!1))
                (concat #b0 ((_ extract 31 1) a!1)))))
(let ((a!3 (ite (= ((_ extract 31 31) a!2) #b1)
                (concat #b1 ((_ extract 31 1) a!2))
                (concat #b0 ((_ extract 31 1) a!2)))))
(let ((a!4 (= #x00000000
              (ite (= ((_ extract 31 31) a!3) #b1)
                   (concat #b1 ((_ extract 31 1) a!3))
                   (concat #b0 ((_ extract 31 1) a!3))))))
  (not a!4))))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) b_ack!136) #b1)
                (concat #b1 ((_ extract 31 1) b_ack!136))
                (concat #b0 ((_ extract 31 1) b_ack!136)))))
(let ((a!2 (ite (= ((_ extract 31 31) a!1) #b1)
                (concat #b1 ((_ extract 31 1) a!1))
                (concat #b0 ((_ extract 31 1) a!1)))))
(let ((a!3 (ite (= ((_ extract 31 31) a!2) #b1)
                (concat #b1 ((_ extract 31 1) a!2))
                (concat #b0 ((_ extract 31 1) a!2)))))
(let ((a!4 (bvand (ite (= ((_ extract 31 31) a!3) #b1)
                       (concat #b1 ((_ extract 31 1) a!3))
                       (concat #b0 ((_ extract 31 1) a!3)))
                  #x00000001)))
  (= #x00000000 a!4))))))
(assert (let ((a!1 (fp.mul roundNearestTiesToEven
                   (fp.mul roundNearestTiesToEven
                           ((_ to_fp 11 53) a_ack!137)
                           ((_ to_fp 11 53) a_ack!137))
                   (fp.mul roundNearestTiesToEven
                           ((_ to_fp 11 53) a_ack!137)
                           ((_ to_fp 11 53) a_ack!137)))))
(let ((a!2 (fp.mul roundNearestTiesToEven
                   (fp.mul roundNearestTiesToEven a!1 a!1)
                   (fp.mul roundNearestTiesToEven a!1 a!1))))
  (FPCHECK_FMUL_ACCURACY a!2 a!2))))

(check-sat)
(exit)
