(declare-fun b_ack!1535 () (_ BitVec 32))
(declare-fun a_ack!1536 () (_ BitVec 32))
(assert (not (bvslt b_ack!1535 #x00000000)))
(assert (not (bvslt a_ack!1536 #x00000000)))
(assert (not (= #x00000000 a_ack!1536)))
(assert (not (bvslt b_ack!1535 a_ack!1536)))
(assert (not (= b_ack!1535 a_ack!1536)))
(assert (not (= b_ack!1535 (bvadd #x00000001 a_ack!1536))))
(assert (not (bvslt a_ack!1536 #x00000000)))
(assert (not (= #x00000000 (bvand a_ack!1536 #x00000001))))
(assert (let ((a!1 (= #x00000000
              (ite (= ((_ extract 31 31) a_ack!1536) #b1)
                   (concat #b1 ((_ extract 31 1) a_ack!1536))
                   (concat #b0 ((_ extract 31 1) a_ack!1536))))))
  (not a!1)))
(assert (let ((a!1 (bvand (ite (= ((_ extract 31 31) a_ack!1536) #b1)
                       (concat #b1 ((_ extract 31 1) a_ack!1536))
                       (concat #b0 ((_ extract 31 1) a_ack!1536)))
                  #x00000001)))
  (not (= #x00000000 a!1))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) a_ack!1536) #b1)
                (concat #b1 ((_ extract 31 1) a_ack!1536))
                (concat #b0 ((_ extract 31 1) a_ack!1536)))))
(let ((a!2 (= #x00000000
              (ite (= ((_ extract 31 31) a!1) #b1)
                   (concat #b1 ((_ extract 31 1) a!1))
                   (concat #b0 ((_ extract 31 1) a!1))))))
  (not a!2))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) a_ack!1536) #b1)
                (concat #b1 ((_ extract 31 1) a_ack!1536))
                (concat #b0 ((_ extract 31 1) a_ack!1536)))))
(let ((a!2 (bvand (ite (= ((_ extract 31 31) a!1) #b1)
                       (concat #b1 ((_ extract 31 1) a!1))
                       (concat #b0 ((_ extract 31 1) a!1)))
                  #x00000001)))
  (= #x00000000 a!2))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) a_ack!1536) #b1)
                (concat #b1 ((_ extract 31 1) a_ack!1536))
                (concat #b0 ((_ extract 31 1) a_ack!1536)))))
(let ((a!2 (ite (= ((_ extract 31 31) a!1) #b1)
                (concat #b1 ((_ extract 31 1) a!1))
                (concat #b0 ((_ extract 31 1) a!1)))))
(let ((a!3 (= #x00000000
              (ite (= ((_ extract 31 31) a!2) #b1)
                   (concat #b1 ((_ extract 31 1) a!2))
                   (concat #b0 ((_ extract 31 1) a!2))))))
  (not a!3)))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) a_ack!1536) #b1)
                (concat #b1 ((_ extract 31 1) a_ack!1536))
                (concat #b0 ((_ extract 31 1) a_ack!1536)))))
(let ((a!2 (ite (= ((_ extract 31 31) a!1) #b1)
                (concat #b1 ((_ extract 31 1) a!1))
                (concat #b0 ((_ extract 31 1) a!1)))))
(let ((a!3 (bvand (ite (= ((_ extract 31 31) a!2) #b1)
                       (concat #b1 ((_ extract 31 1) a!2))
                       (concat #b0 ((_ extract 31 1) a!2)))
                  #x00000001)))
  (= #x00000000 a!3)))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) a_ack!1536) #b1)
                (concat #b1 ((_ extract 31 1) a_ack!1536))
                (concat #b0 ((_ extract 31 1) a_ack!1536)))))
(let ((a!2 (ite (= ((_ extract 31 31) a!1) #b1)
                (concat #b1 ((_ extract 31 1) a!1))
                (concat #b0 ((_ extract 31 1) a!1)))))
(let ((a!3 (ite (= ((_ extract 31 31) a!2) #b1)
                (concat #b1 ((_ extract 31 1) a!2))
                (concat #b0 ((_ extract 31 1) a!2)))))
(let ((a!4 (= #x00000000
              (ite (= ((_ extract 31 31) a!3) #b1)
                   (concat #b1 ((_ extract 31 1) a!3))
                   (concat #b0 ((_ extract 31 1) a!3))))))
  (not a!4))))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) a_ack!1536) #b1)
                (concat #b1 ((_ extract 31 1) a_ack!1536))
                (concat #b0 ((_ extract 31 1) a_ack!1536)))))
(let ((a!2 (ite (= ((_ extract 31 31) a!1) #b1)
                (concat #b1 ((_ extract 31 1) a!1))
                (concat #b0 ((_ extract 31 1) a!1)))))
(let ((a!3 (ite (= ((_ extract 31 31) a!2) #b1)
                (concat #b1 ((_ extract 31 1) a!2))
                (concat #b0 ((_ extract 31 1) a!2)))))
(let ((a!4 (bvand (ite (= ((_ extract 31 31) a!3) #b1)
                       (concat #b1 ((_ extract 31 1) a!3))
                       (concat #b0 ((_ extract 31 1) a!3)))
                  #x00000001)))
  (not (= #x00000000 a!4)))))))
(assert (let ((a!1 (ite (= ((_ extract 31 31) a_ack!1536) #b1)
                (concat #b1 ((_ extract 31 1) a_ack!1536))
                (concat #b0 ((_ extract 31 1) a_ack!1536)))))
(let ((a!2 (ite (= ((_ extract 31 31) a!1) #b1)
                (concat #b1 ((_ extract 31 1) a!1))
                (concat #b0 ((_ extract 31 1) a!1)))))
(let ((a!3 (ite (= ((_ extract 31 31) a!2) #b1)
                (concat #b1 ((_ extract 31 1) a!2))
                (concat #b0 ((_ extract 31 1) a!2)))))
(let ((a!4 (ite (= ((_ extract 31 31) a!3) #b1)
                (concat #b1 ((_ extract 31 1) a!3))
                (concat #b0 ((_ extract 31 1) a!3)))))
  (= #x00000000
     (ite (= ((_ extract 31 31) a!4) #b1)
          (concat #b1 ((_ extract 31 1) a!4))
          (concat #b0 ((_ extract 31 1) a!4)))))))))
(assert (not (bvult a_ack!1536 #x00000012)))
(assert (bvule a_ack!1536 #x000000aa))
(assert (bvult #x0000000000000000
       (bvadd #x0000000000000008
              (bvmul #x0000000000000018 (concat #x00000000 a_ack!1536)))))
(assert (bvult (bvadd #x0000000000000008
              (bvmul #x0000000000000018 (concat #x00000000 a_ack!1536)))
       #x0000000000001001))
(assert (bvslt #x00000000 a_ack!1536))
(assert (bvslt #x00000001 a_ack!1536))
(assert (bvslt #x00000002 a_ack!1536))
(assert (bvslt #x00000003 a_ack!1536))
(assert (bvslt #x00000004 a_ack!1536))
(assert (bvslt #x00000005 a_ack!1536))
(assert (bvslt #x00000006 a_ack!1536))
(assert (bvslt #x00000007 a_ack!1536))
(assert (bvslt #x00000008 a_ack!1536))
(assert (bvslt #x00000009 a_ack!1536))
(assert (bvslt #x0000000a a_ack!1536))
(assert (bvslt #x0000000b a_ack!1536))
(assert (bvslt #x0000000c a_ack!1536))
(assert (bvslt #x0000000d a_ack!1536))
(assert (bvslt #x0000000e a_ack!1536))
(assert (bvslt #x0000000f a_ack!1536))
(assert (bvslt #x00000010 a_ack!1536))
(assert (bvslt #x00000011 a_ack!1536))
(assert (bvslt #x00000012 a_ack!1536))
(assert (not (bvslt #x00000013 a_ack!1536)))
(assert (bvult #x0000000000000000
       (bvmul #x0000000000000008 ((_ sign_extend 32) a_ack!1536))))
(assert (bvult (bvmul #x0000000000000008 ((_ sign_extend 32) a_ack!1536))
       #x0000000000000319))
(assert (bvult #x0000000000000000
       (bvmul #x0000000000000008
              ((_ sign_extend 32) (bvadd #x00000001 a_ack!1536)))))
(assert (bvult (bvmul #x0000000000000008
              ((_ sign_extend 32) (bvadd #x00000001 a_ack!1536)))
       #x0000000000000319))
(assert (bvslt (bvadd #x00000001 a_ack!1536) b_ack!1535))
(assert (bvult #x0000000000000000
       (bvmul #x0000000000000008
              ((_ sign_extend 32) (bvadd #x00000002 a_ack!1536)))))
(assert (bvult (bvmul #x0000000000000008
              ((_ sign_extend 32) (bvadd #x00000002 a_ack!1536)))
       #x0000000000000319))
(assert (bvslt (bvadd #x00000002 a_ack!1536) b_ack!1535))

(check-sat)
(exit)
