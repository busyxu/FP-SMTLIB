(declare-fun c_ack!2908 () (_ BitVec 64))
(declare-fun a_ack!2909 () (_ BitVec 32))
(declare-fun b_ack!2907 () (_ BitVec 32))
(assert (not (fp.gt (fp.abs ((_ to_fp 11 53) c_ack!2908))
            ((_ to_fp 11 53) #x40862642fefa39ef))))
(assert (not (bvslt b_ack!2907 a_ack!2909)))
(assert (not (bvslt a_ack!2909 #x00000000)))
(assert (not (fp.eq ((_ to_fp 11 53) c_ack!2908) ((_ to_fp 11 53) #x0000000000000000))))
(assert (not (= #x00000000 b_ack!2907)))
(assert (not (fp.eq (fp.abs ((_ to_fp 11 53) c_ack!2908))
            ((_ to_fp 11 53) #x0000000000000000))))
(assert (let ((a!1 (fp.lt (fp.mul roundNearestTiesToEven
                          (fp.abs ((_ to_fp 11 53) c_ack!2908))
                          (fp.abs ((_ to_fp 11 53) c_ack!2908)))
                  ((_ to_fp 11 53) #x41fd6e2bc3b82b06))))
  (not a!1)))
(assert (let ((a!1 (fp.add roundNearestTiesToEven
                   ((_ to_fp 11 53) #x3ff0000000000000)
                   (fp.mul roundNearestTiesToEven
                           (fp.abs ((_ to_fp 11 53) c_ack!2908))
                           (fp.abs ((_ to_fp 11 53) c_ack!2908))))))
  (fp.eq a!1 ((_ to_fp 11 53) #x0000000000000000))))

(check-sat)
(exit)
